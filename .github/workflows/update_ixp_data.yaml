name: Update IXP Data and Notify Webhook

on:
  schedule:
    # Runs "Every day at 00:00" (see https://crontab.guru)
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Packages
        run: |
           pip3 install beautifulsoup4
           pip3 install requests

      - name: Run get_peeringdb_ixps.py
        run: python3 get_peeringdb_ixps.py --output-peeringlan "${{ secrets.API_KEY_PEERINGDB }}"

      - name: Run get_he_ixps.py
        run: python3 get_he_ixps.py

      - name: Run get_pch_ixps.py
        run: python3 get_pch_ixps.py

      - name: Run merge_ixp_data.py
        run: python3 merge_ixp_data.py

      # Commit changes to the repository
      - name: Commit changes
        if: success()
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Workflow
          author_email: actions@github.com
          message: 'Updating IXPs'
          add: 'data/*.json'

      # Send notification to mattermost channel
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 5  # Corrected indentation here

      - name: Set Webhook URL
        run: |
          echo "WEBHOOK_URL=https://mattermost.ripe.net/hooks/nwqyskg5gbdxze78ppa3st37by" >> $GITHUB_ENV 
      - name: Identify Changes on Specific File
        run: |
          FILE_NAME="data/ixps.json"
          CHANGES=$(git diff HEAD~1 HEAD -- $FILE_NAME)

          if [[ -n "$CHANGES" ]]; then
            PAYLOAD="{\"last_commit\": \"$(git rev-parse HEAD)\", \"previous_commit\": \"$(git rev-parse HEAD~1)\", \"changes\": \"Changes detected in $FILE_NAME\"}"
            echo "PAYLOAD=$PAYLOAD" >> $GITHUB_ENV
          else
            echo "No changes detected in $FILE_NAME"
          fi

      - name: Send Payload to Webhook
        run: |
          WEBHOOK_URL=${{ env.WEBHOOK_URL }}
          PAYLOAD=$(echo $PAYLOAD)
          curl -X POST -H "Content-Type: application/json" -d "$PAYLOAD" $WEBHOOK_URL
